import sqlite3
import bcrypt
import tkinter as tk
from tkinter import messagebox

# --- Βάση Δεδομένων ---
def init_db():
    conn = sqlite3.connect("travel.db")
    cursor = conn.cursor()
    
    cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                        user_id INTEGER PRIMARY KEY AUTOINCREMENT,
                        username TEXT UNIQUE NOT NULL,
                        email TEXT UNIQUE NOT NULL,
                        password_hash TEXT NOT NULL,
                        role TEXT CHECK(role IN ('user', 'admin')) NOT NULL DEFAULT 'user'
                    )''')
    
    conn.commit()
    conn.close()

def register_user(username, email, password):
    conn = sqlite3.connect("travel.db")
    cursor = conn.cursor()

    hashed_password = bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')

    try:
        cursor.execute("INSERT INTO users (username, email, password_hash) VALUES (?, ?, ?)", 
                       (username, email, hashed_password))
        conn.commit()
        messagebox.showinfo("Επιτυχία", "Η εγγραφή ολοκληρώθηκε!")
    except sqlite3.IntegrityError:
        messagebox.showerror("Σφάλμα", "Το username ή email υπάρχει ήδη!")
    finally:
        conn.close()

def login_user(username, password):
    conn = sqlite3.connect("travel.db")
    cursor = conn.cursor()

    cursor.execute("SELECT user_id, password_hash FROM users WHERE username = ?", (username,))
    user = cursor.fetchone()
    
    conn.close()

    if user and bcrypt.checkpw(password.encode('utf-8'), user[1].encode('utf-8')):
        messagebox.showinfo("Σύνδεση", f"Καλώς ήρθες, {username}!")
    else:
        messagebox.showerror("Σφάλμα", "Λάθος username ή password")

# --- Tkinter GUI ---
def register_window():
    reg_win = tk.Toplevel()
    reg_win.title("Εγγραφή")

    tk.Label(reg_win, text="Username:").grid(row=0, column=0)
    username_entry = tk.Entry(reg_win)
    username_entry.grid(row=0, column=1)

    tk.Label(reg_win, text="Email:").grid(row=1, column=0)
    email_entry = tk.Entry(reg_win)
    email_entry.grid(row=1, column=1)

    tk.Label(reg_win, text="Password:").grid(row=2, column=0)
    password_entry = tk.Entry(reg_win, show="*")
    password_entry.grid(row=2, column=1)

    def submit_register():
        register_user(username_entry.get(), email_entry.get(), password_entry.get())

    tk.Button(reg_win, text="Εγγραφή", command=submit_register).grid(row=3, columnspan=2)

def main_window():
    root = tk.Tk()
    root.title("Travel Management")

    tk.Label(root, text="Username:").grid(row=0, column=0)
    username_entry = tk.Entry(root)
    username_entry.grid(row=0, column=1)

    tk.Label(root, text="Password:").grid(row=1, column=0)
    password_entry = tk.Entry(root, show="*")
    password_entry.grid(row=1, column=1)

    def submit_login():
        login_user(username_entry.get(), password_entry.get())

    tk.Button(root, text="Σύνδεση", command=submit_login).grid(row=2, columnspan=2)
    tk.Button(root, text="Εγγραφή", command=register_window).grid(row=3, columnspan=2)

    root.mainloop()

if __name__ == "__main__":
    init_db()
    main_window()
